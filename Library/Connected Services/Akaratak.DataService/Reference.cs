//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.Akaratak.DataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Options_Handler", Namespace="http://schemas.datacontract.org/2004/07/DynamicDataWebSite")]
    [System.SerializableAttribute()]
    public partial class Options_Handler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> City_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Contract_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Country_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_AddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpectedEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Expire_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GarageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GardenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Has_GarageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Has_GardenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Num_BathroomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Num_BedroomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Num_FloorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldpasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Other_DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.FileStream PhotostreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Property_Category_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Property_Id_extField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Property_PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Property_SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Property_Type_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Rent_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Sale_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Url_extField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Zip_CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cat {
            get {
                return this.CatField;
            }
            set {
                if ((object.ReferenceEquals(this.CatField, value) != true)) {
                    this.CatField = value;
                    this.RaisePropertyChanged("Cat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> City_ID {
            get {
                return this.City_IDField;
            }
            set {
                if ((this.City_IDField.Equals(value) != true)) {
                    this.City_IDField = value;
                    this.RaisePropertyChanged("City_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Contract_Type {
            get {
                return this.Contract_TypeField;
            }
            set {
                if ((this.Contract_TypeField.Equals(value) != true)) {
                    this.Contract_TypeField = value;
                    this.RaisePropertyChanged("Contract_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Country_ID {
            get {
                return this.Country_IDField;
            }
            set {
                if ((this.Country_IDField.Equals(value) != true)) {
                    this.Country_IDField = value;
                    this.RaisePropertyChanged("Country_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Added {
            get {
                return this.Date_AddedField;
            }
            set {
                if ((this.Date_AddedField.Equals(value) != true)) {
                    this.Date_AddedField = value;
                    this.RaisePropertyChanged("Date_Added");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpectedEntry {
            get {
                return this.ExpectedEntryField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpectedEntryField, value) != true)) {
                    this.ExpectedEntryField = value;
                    this.RaisePropertyChanged("ExpectedEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expire_Date {
            get {
                return this.Expire_DateField;
            }
            set {
                if ((this.Expire_DateField.Equals(value) != true)) {
                    this.Expire_DateField = value;
                    this.RaisePropertyChanged("Expire_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Garage {
            get {
                return this.GarageField;
            }
            set {
                if ((this.GarageField.Equals(value) != true)) {
                    this.GarageField = value;
                    this.RaisePropertyChanged("Garage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Garden {
            get {
                return this.GardenField;
            }
            set {
                if ((this.GardenField.Equals(value) != true)) {
                    this.GardenField = value;
                    this.RaisePropertyChanged("Garden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Has_Garage {
            get {
                return this.Has_GarageField;
            }
            set {
                if ((this.Has_GarageField.Equals(value) != true)) {
                    this.Has_GarageField = value;
                    this.RaisePropertyChanged("Has_Garage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Has_Garden {
            get {
                return this.Has_GardenField;
            }
            set {
                if ((this.Has_GardenField.Equals(value) != true)) {
                    this.Has_GardenField = value;
                    this.RaisePropertyChanged("Has_Garden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lang {
            get {
                return this.LangField;
            }
            set {
                if ((object.ReferenceEquals(this.LangField, value) != true)) {
                    this.LangField = value;
                    this.RaisePropertyChanged("Lang");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num_Bathrooms {
            get {
                return this.Num_BathroomsField;
            }
            set {
                if ((this.Num_BathroomsField.Equals(value) != true)) {
                    this.Num_BathroomsField = value;
                    this.RaisePropertyChanged("Num_Bathrooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num_Bedrooms {
            get {
                return this.Num_BedroomsField;
            }
            set {
                if ((this.Num_BedroomsField.Equals(value) != true)) {
                    this.Num_BedroomsField = value;
                    this.RaisePropertyChanged("Num_Bedrooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Num_Floors {
            get {
                return this.Num_FloorsField;
            }
            set {
                if ((this.Num_FloorsField.Equals(value) != true)) {
                    this.Num_FloorsField = value;
                    this.RaisePropertyChanged("Num_Floors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oldpassword {
            get {
                return this.OldpasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldpasswordField, value) != true)) {
                    this.OldpasswordField = value;
                    this.RaisePropertyChanged("Oldpassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Other_Details {
            get {
                return this.Other_DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.Other_DetailsField, value) != true)) {
                    this.Other_DetailsField = value;
                    this.RaisePropertyChanged("Other_Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.FileStream Photostream {
            get {
                return this.PhotostreamField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotostreamField, value) != true)) {
                    this.PhotostreamField = value;
                    this.RaisePropertyChanged("Photostream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Property_Category_ID {
            get {
                return this.Property_Category_IDField;
            }
            set {
                if ((this.Property_Category_IDField.Equals(value) != true)) {
                    this.Property_Category_IDField = value;
                    this.RaisePropertyChanged("Property_Category_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property_Id_ext {
            get {
                return this.Property_Id_extField;
            }
            set {
                if ((object.ReferenceEquals(this.Property_Id_extField, value) != true)) {
                    this.Property_Id_extField = value;
                    this.RaisePropertyChanged("Property_Id_ext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property_Photo {
            get {
                return this.Property_PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.Property_PhotoField, value) != true)) {
                    this.Property_PhotoField = value;
                    this.RaisePropertyChanged("Property_Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Property_Size {
            get {
                return this.Property_SizeField;
            }
            set {
                if ((this.Property_SizeField.Equals(value) != true)) {
                    this.Property_SizeField = value;
                    this.RaisePropertyChanged("Property_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Property_Type_ID {
            get {
                return this.Property_Type_IDField;
            }
            set {
                if ((this.Property_Type_IDField.Equals(value) != true)) {
                    this.Property_Type_IDField = value;
                    this.RaisePropertyChanged("Property_Type_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rent_Price {
            get {
                return this.Rent_PriceField;
            }
            set {
                if ((this.Rent_PriceField.Equals(value) != true)) {
                    this.Rent_PriceField = value;
                    this.RaisePropertyChanged("Rent_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sale_Price {
            get {
                return this.Sale_PriceField;
            }
            set {
                if ((this.Sale_PriceField.Equals(value) != true)) {
                    this.Sale_PriceField = value;
                    this.RaisePropertyChanged("Sale_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url_ext {
            get {
                return this.Url_extField;
            }
            set {
                if ((object.ReferenceEquals(this.Url_extField, value) != true)) {
                    this.Url_extField = value;
                    this.RaisePropertyChanged("Url_ext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IDField, value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip_Code {
            get {
                return this.Zip_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Zip_CodeField, value) != true)) {
                    this.Zip_CodeField = value;
                    this.RaisePropertyChanged("Zip_Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City_Handler", Namespace="http://schemas.datacontract.org/2004/07/DynamicDataWebSite")]
    [System.SerializableAttribute()]
    public partial class City_Handler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int City_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string City_Latin_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string City_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string City_Native_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Country_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int City_ID {
            get {
                return this.City_IDField;
            }
            set {
                if ((this.City_IDField.Equals(value) != true)) {
                    this.City_IDField = value;
                    this.RaisePropertyChanged("City_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City_Latin_Name {
            get {
                return this.City_Latin_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.City_Latin_NameField, value) != true)) {
                    this.City_Latin_NameField = value;
                    this.RaisePropertyChanged("City_Latin_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City_Name {
            get {
                return this.City_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.City_NameField, value) != true)) {
                    this.City_NameField = value;
                    this.RaisePropertyChanged("City_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City_Native_Name {
            get {
                return this.City_Native_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.City_Native_NameField, value) != true)) {
                    this.City_Native_NameField = value;
                    this.RaisePropertyChanged("City_Native_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Country_ID {
            get {
                return this.Country_IDField;
            }
            set {
                if ((this.Country_IDField.Equals(value) != true)) {
                    this.Country_IDField = value;
                    this.RaisePropertyChanged("Country_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country_Handler", Namespace="http://schemas.datacontract.org/2004/07/DynamicDataWebSite")]
    [System.SerializableAttribute()]
    public partial class Country_Handler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Country_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Country_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Country_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Country_Native_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_Code {
            get {
                return this.Country_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Country_CodeField, value) != true)) {
                    this.Country_CodeField = value;
                    this.RaisePropertyChanged("Country_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Country_ID {
            get {
                return this.Country_IDField;
            }
            set {
                if ((this.Country_IDField.Equals(value) != true)) {
                    this.Country_IDField = value;
                    this.RaisePropertyChanged("Country_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_Name {
            get {
                return this.Country_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Country_NameField, value) != true)) {
                    this.Country_NameField = value;
                    this.RaisePropertyChanged("Country_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_Native_Name {
            get {
                return this.Country_Native_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Country_Native_NameField, value) != true)) {
                    this.Country_Native_NameField = value;
                    this.RaisePropertyChanged("Country_Native_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Akaratak.DataService.ITelegram_Handler")]
    public interface ITelegram_Handler {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Add_User", ReplyAction="http://tempuri.org/ITelegram_Handler/_Add_UserResponse")]
        string _Add_User(Library.Akaratak.DataService.Options_Handler handler, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Add_User", ReplyAction="http://tempuri.org/ITelegram_Handler/_Add_UserResponse")]
        System.Threading.Tasks.Task<string> _Add_UserAsync(Library.Akaratak.DataService.Options_Handler handler, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/Test", ReplyAction="http://tempuri.org/ITelegram_Handler/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/Test", ReplyAction="http://tempuri.org/ITelegram_Handler/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_User_Exist", ReplyAction="http://tempuri.org/ITelegram_Handler/_User_ExistResponse")]
        bool _User_Exist(Library.Akaratak.DataService.Options_Handler handler, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_User_Exist", ReplyAction="http://tempuri.org/ITelegram_Handler/_User_ExistResponse")]
        System.Threading.Tasks.Task<bool> _User_ExistAsync(Library.Akaratak.DataService.Options_Handler handler, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Update_User", ReplyAction="http://tempuri.org/ITelegram_Handler/_Update_UserResponse")]
        string _Update_User(Library.Akaratak.DataService.Options_Handler handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Update_User", ReplyAction="http://tempuri.org/ITelegram_Handler/_Update_UserResponse")]
        System.Threading.Tasks.Task<string> _Update_UserAsync(Library.Akaratak.DataService.Options_Handler handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Add_Property", ReplyAction="http://tempuri.org/ITelegram_Handler/_Add_PropertyResponse")]
        string _Add_Property(Library.Akaratak.DataService.Options_Handler property, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Add_Property", ReplyAction="http://tempuri.org/ITelegram_Handler/_Add_PropertyResponse")]
        System.Threading.Tasks.Task<string> _Add_PropertyAsync(Library.Akaratak.DataService.Options_Handler property, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Property_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Property_ListResponse")]
        Library.Akaratak.DataService.Options_Handler[] _Get_Property_List(Library.Akaratak.DataService.Options_Handler handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Property_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Property_ListResponse")]
        System.Threading.Tasks.Task<Library.Akaratak.DataService.Options_Handler[]> _Get_Property_ListAsync(Library.Akaratak.DataService.Options_Handler handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Update_Property", ReplyAction="http://tempuri.org/ITelegram_Handler/_Update_PropertyResponse")]
        string _Update_Property(Library.Akaratak.DataService.Options_Handler property, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Update_Property", ReplyAction="http://tempuri.org/ITelegram_Handler/_Update_PropertyResponse")]
        System.Threading.Tasks.Task<string> _Update_PropertyAsync(Library.Akaratak.DataService.Options_Handler property, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_City_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_City_ListResponse")]
        Library.Akaratak.DataService.City_Handler[] _Get_City_List(int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_City_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_City_ListResponse")]
        System.Threading.Tasks.Task<Library.Akaratak.DataService.City_Handler[]> _Get_City_ListAsync(int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Country_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Country_ListResponse")]
        Library.Akaratak.DataService.Country_Handler[] _Get_Country_List();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Country_List", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Country_ListResponse")]
        System.Threading.Tasks.Task<Library.Akaratak.DataService.Country_Handler[]> _Get_Country_ListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Property_Value", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Property_ValueResponse")]
        Library.Akaratak.DataService.Options_Handler _Get_Property_Value(Library.Akaratak.DataService.Options_Handler handler, string address, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITelegram_Handler/_Get_Property_Value", ReplyAction="http://tempuri.org/ITelegram_Handler/_Get_Property_ValueResponse")]
        System.Threading.Tasks.Task<Library.Akaratak.DataService.Options_Handler> _Get_Property_ValueAsync(Library.Akaratak.DataService.Options_Handler handler, string address, string date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITelegram_HandlerChannel : Library.Akaratak.DataService.ITelegram_Handler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Telegram_HandlerClient : System.ServiceModel.ClientBase<Library.Akaratak.DataService.ITelegram_Handler>, Library.Akaratak.DataService.ITelegram_Handler {
        
        public Telegram_HandlerClient() {
        }
        
        public Telegram_HandlerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Telegram_HandlerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Telegram_HandlerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Telegram_HandlerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string _Add_User(Library.Akaratak.DataService.Options_Handler handler, string token) {
            return base.Channel._Add_User(handler, token);
        }
        
        public System.Threading.Tasks.Task<string> _Add_UserAsync(Library.Akaratak.DataService.Options_Handler handler, string token) {
            return base.Channel._Add_UserAsync(handler, token);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public bool _User_Exist(Library.Akaratak.DataService.Options_Handler handler, string token) {
            return base.Channel._User_Exist(handler, token);
        }
        
        public System.Threading.Tasks.Task<bool> _User_ExistAsync(Library.Akaratak.DataService.Options_Handler handler, string token) {
            return base.Channel._User_ExistAsync(handler, token);
        }
        
        public string _Update_User(Library.Akaratak.DataService.Options_Handler handler) {
            return base.Channel._Update_User(handler);
        }
        
        public System.Threading.Tasks.Task<string> _Update_UserAsync(Library.Akaratak.DataService.Options_Handler handler) {
            return base.Channel._Update_UserAsync(handler);
        }
        
        public string _Add_Property(Library.Akaratak.DataService.Options_Handler property, string token) {
            return base.Channel._Add_Property(property, token);
        }
        
        public System.Threading.Tasks.Task<string> _Add_PropertyAsync(Library.Akaratak.DataService.Options_Handler property, string token) {
            return base.Channel._Add_PropertyAsync(property, token);
        }
        
        public Library.Akaratak.DataService.Options_Handler[] _Get_Property_List(Library.Akaratak.DataService.Options_Handler handler) {
            return base.Channel._Get_Property_List(handler);
        }
        
        public System.Threading.Tasks.Task<Library.Akaratak.DataService.Options_Handler[]> _Get_Property_ListAsync(Library.Akaratak.DataService.Options_Handler handler) {
            return base.Channel._Get_Property_ListAsync(handler);
        }
        
        public string _Update_Property(Library.Akaratak.DataService.Options_Handler property, string token) {
            return base.Channel._Update_Property(property, token);
        }
        
        public System.Threading.Tasks.Task<string> _Update_PropertyAsync(Library.Akaratak.DataService.Options_Handler property, string token) {
            return base.Channel._Update_PropertyAsync(property, token);
        }
        
        public Library.Akaratak.DataService.City_Handler[] _Get_City_List(int cid) {
            return base.Channel._Get_City_List(cid);
        }
        
        public System.Threading.Tasks.Task<Library.Akaratak.DataService.City_Handler[]> _Get_City_ListAsync(int cid) {
            return base.Channel._Get_City_ListAsync(cid);
        }
        
        public Library.Akaratak.DataService.Country_Handler[] _Get_Country_List() {
            return base.Channel._Get_Country_List();
        }
        
        public System.Threading.Tasks.Task<Library.Akaratak.DataService.Country_Handler[]> _Get_Country_ListAsync() {
            return base.Channel._Get_Country_ListAsync();
        }
        
        public Library.Akaratak.DataService.Options_Handler _Get_Property_Value(Library.Akaratak.DataService.Options_Handler handler, string address, string date) {
            return base.Channel._Get_Property_Value(handler, address, date);
        }
        
        public System.Threading.Tasks.Task<Library.Akaratak.DataService.Options_Handler> _Get_Property_ValueAsync(Library.Akaratak.DataService.Options_Handler handler, string address, string date) {
            return base.Channel._Get_Property_ValueAsync(handler, address, date);
        }
    }
}
